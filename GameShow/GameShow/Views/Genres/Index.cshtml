@model GameShow.Models.GenresDTO
@using PagedList.Mvc;


@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<br /><br />
<h3>Lista Stylów Gry</h3>

@{
    if (!String.IsNullOrEmpty(Model.ErrorMessage))
    {
        <div class="alert alert-danger alert-dismissable">
            <a href="#" class="close" data-dismiss="alert" aria-label="close">×</a>
            <strong>Error!</strong> @Model.ErrorMessage
        </div>
    }
}

<table class="table table-bordered table-hover col-md-12">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.SelectedGenre.IDGenre)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SelectedGenre.GenreName)
        </th>

    </tr>

    @foreach (var item in Model.PagedGenres)
    {
        <tr id="@("genre" + item.IDGenre)" onclick="editGenre(@item.IDGenre)">

            <td class="genre-id">
                @Html.DisplayFor(modelItem => item.IDGenre)
            </td>
            <td class="genre-name">
                @Html.DisplayFor(modelItem => item.GenreName)
            </td>
            @Html.HiddenFor(modelItem => item.Stamp, new { @class = "genre-stamp" })


        </tr>
    }

</table>

<br />
Page @(Model.PagedGenres.PageCount < Model.PagedGenres.PageNumber ? 0 : Model.PagedGenres.PageNumber) of @Model.PagedGenres.PageCount

@Html.PagedListPager(Model.PagedGenres, page => Url.Action("Index",
new { page }))


@using (Html.BeginForm("GenreForms", "Genres"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Edycja</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.SelectedGenre.GenreName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.SelectedGenre.GenreName, new { htmlAttributes = new { @class = "form-control kontrolka-dolna", @id = "form-genre-name" } })
                @Html.ValidationMessageFor(model => model.SelectedGenre.GenreName, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.HiddenFor(model => model.SelectedGenre.IDGenre, new { @id = "form-genre-id" })
        @Html.HiddenFor(model => model.SelectedGenre.Stamp, new { @id = "form-genre-stamp" })

        <div class="form-group">
            <div class="col-md-8">
                <div class="pull-right">
                    <button type="submit" name="request" id="creategenre" value="Create" class="btn btn-primary przycisk-dolny">Nowa</button>
                    <button type="submit" name="request" id="editgenre" value="Edit" class="btn btn-primary przycisk-dolny" disabled>Zapisz</button>
                    <button type="submit" name="request" id="deletegenre" value="Delete" class="btn btn-primary przycisk-dolny" disabled>Usuń</button>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        function editGenre(rowId) {
            var prnt = $("#genre" + rowId);
            $("#form-genre-name").val(prnt.find(".genre-name").text().trim());
            $("#form-genre-stamp").val(prnt.find(".genre-stamp").val());
            $("#form-genre-id").val(prnt.find(".genre-id").text().trim());


            document.getElementById("editgenre").disabled = false;
            document.getElementById("deletegenre").disabled = false;
        }
    </script>

}
